import Navbar from '@/components/Navbar'
import type { AppProps } from 'next/app'
import Head from 'next/head'
import LogData from '@/components/LogData'
import { MultiSelect } from 'primereact/multiselect';
import { useState, useEffect } from "react"


export default function History() {
    const [selectedDeviceType, updateSelectedDeviceType] = useState(null)
    const [deviceTypes, updateDeviceTypes] = useState([])
    const [selectedSerialNumbers, updateSelectedSerialNumbers] = useState([])
    const [serialNumbers, updateSerialNumbers] = useState([])

    function getDeviceTypes() {
        fetch(`http://localhost:9090/api/v1/label/device_type/values`)
        .then(response => response.json())
        .then(data => {
            if (data.status === "success") {
                updateDeviceTypes(data.data)
            }
        })
    }

    function getSerialNumbers() {
        console.log("Getting serial numbers")
        var query = `http://localhost:9090/api/v1/label/serial_number/values?match[]=device_health{group="risk"}`
        if (selectedDeviceType === "all") {
            query = `http://localhost:9090/api/v1/label/serial_number/values?match[]=device_health{device_type="${selectedDeviceType}",group="risk"}`
        }
        fetch(query)
        .then(response => response.json())
        .then(data => {
            if (data.status === "success") {
                const mappedData = data.data.map((serial: string) => ({name: serial, code: serial}))
                console.log(mappedData)
                updateSerialNumbers(mappedData)
            }
        })
    }

    useEffect(() => {
        getDeviceTypes()
        getSerialNumbers()
    }, [])

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="bg-component1 m-4 p-4 flex place-content-between items-center pr-48 pl-16">

                <MultiSelect value={selectedSerialNumbers} onChange={(e) => updateSelectedSerialNumbers(e.value)} options={serialNumbers} optionLabel="name" filter 
                placeholder="Serial number" maxSelectedLabels={3} className="w-48" />
                
                <select className="bg-component2 text-text rounded m-2 p-4 w-48" name="dateFilter">
                    <option value="" disabled selected>Date</option>
                    
                    <option value="desc">Newest to oldest</option>
                    <option value="asc">Oldest to newest</option>
                </select>

                <select className="bg-component2 text-text rounded m-2 p-4 w-48" name="deviceTypeFilter">
                    <option value="" disabled selected>Type</option>
                    <option value="all">All</option>
                    {deviceTypes.map(type => {
                        return <option value={type}>{ type }</option>;
                    })}
                </select>

                <select className="bg-component2 text-text rounded m-2 p-4 w-48" name="predictionFilter">
                    <option value="" disabled selected>Prediction</option>
                    <option value="desc">Highest to lowest</option>
                    <option value="asc">Lowest to highest</option>
                </select>
            </div>

            <div className="bg-component ml-4 mr-4 mt-2 p-4 h-4/6 overflow-auto">
                <LogData />
            </div>

        </>
    )
}
